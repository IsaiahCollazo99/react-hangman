{"version":3,"sources":["assets/hangman_0.svg","assets/hangman_1.svg","assets/hangman_2.svg","assets/hangman_3.svg","assets/hangman_4.svg","assets/hangman_5.svg","assets/hangman_6.svg","util/dictionary.js","util/moves.js","components/GuessForm.js","util/visualHangman.js","components/Game.js","components/GameSetup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","movies","veryHard","hard","medium","easy","games","books","tvShows","musicArtists","misc","moves","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","GuessForm","handleGuess","guessesObj","useState","guess","setGuess","error","setError","className","onSubmit","preventDefault","toLowerCase","type","maxLength","value","onChange","target","visualHangman","6","hangman_0","5","hangman_1","4","hangman_2","3","hangman_3","2","hangman_4","1","hangman_5","0","hangman_6","Game","gameOver","isGameOver","answer","returnToSetup","category","difficulty","displayWord","setDisplayWord","guessesRemaining","setGuessesRemaining","guesses","setGuesses","setGuessesObj","guessesStyle","setGuessesStyle","useEffect","underscores","push","getDisplayWord","length","categoryDisplay","slice","toUpperCase","difficultyDisplay","hangmanDisplay","src","alt","style","join","map","letter","key","onClick","guessFound","newDisplayWord","newGuessesObj","newGuesses","GameSetup","handleSetup","setCategory","setDifficulty","handleChange","htmlFor","required","defaultValue","disabled","App","setAnswer","setGameOver","gameOptions","setGameOptions","wins","setWins","losses","setLosses","console","log","gameProps","options","dictionaryCategory","dictionary","validDictionaryTerms","randomIndex","Math","floor","random","newWord","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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AAU,CACN,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,O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","file":"static/js/main.efb28e6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hangman_0.ae4a7aad.svg\";","module.exports = __webpack_public_path__ + \"static/media/hangman_1.7ef68bf2.svg\";","module.exports = __webpack_public_path__ + \"static/media/hangman_2.32fcbb0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/hangman_3.b2f66150.svg\";","module.exports = __webpack_public_path__ + \"static/media/hangman_4.c8f3fce3.svg\";","module.exports = __webpack_public_path__ + \"static/media/hangman_5.9148b31b.svg\";","module.exports = __webpack_public_path__ + \"static/media/hangman_6.56bdf97b.svg\";","export default {\n    movies: {\n        veryHard: [    \n            'jaws', 'et', 'coco', 'hulk', 'thor', 'xmen', 'fury', 'up', 'hair', 'saw'\n        ],\n        hard: [\n            'alien', 'titanic', 'psycho', 'rocky', 'avatar', 'moana', 'aladdin', 'mulan', \n            'click', 'creed', 'frozen', 'aquaman', 'ice age', 'venom', 'shrek', 'grease', \n            'bambi', 'twister', 'rambo', 'taken', 'borat', 'hot rod'\n        ],\n        medium: [\n            'la la land', 'whiplash', 'godfather', 'star wars', 'casablanca', \n            'the matrix', 'goodfellas', 'fight club', 'inception', 'snow white', \n            'cinderella', 'toy story', 'booksmart', 'lion king', 'die hard', 'spiderman', \n            'iron man', 'deadpool', 'the room', 'zootopia', 'home alone', 'godzilla', \n            'king kong', 'peter pan', 'rush hour', 'liar liar', 'magic mike', \n            'happy feet', 'the ring', 'halloween', 'sin city', 'space jam', 'surfs up'\n        ],\n        easy: [\n            'lord of the rings', 'the dark knight', 'pulp fiction', 'inglorious bastards',\n            'forrest gump', 'jurassic park', 'back to the future', \n            'the shawshank redemption', 'schindlers list', 'the departed', \n            'silence of the lambs', 'the wizard of oz', 'the exorcist', 'the avengers',\n            'scott pilgrim vs the world', 'baby driver', 'infinity war', 'captain america',\n            'captain marvel', 'guardians of the galaxy', 'fantastic four', \n            'the spongebob movie', 'the waterboy', 'benchwarmers', 'black panther', \n            'doctor strange', 'pirates of the carribean', \n            'willy wonka and the chocolate factory', 'a bronx tale', 'harry potter',\n            'fast and furious', 'beauty and the beast', 'the incredibles', 'wonder woman',\n            'finding nemo', 'the twilight saga', 'mission impossible', \n            'the chronicles of narnia', 'independence day', 'transformers', \n            'suicide squad', 'alice in wonderland', 'the passion of christ', \n            'the greatest showman', 'mary poppins', 'ghostbusters', 'west side story',\n            'the breakfast club', 'men in black', 'the jungle book', 'beverly hills cop',\n            'saving private ryan', 'how the grinch stole christmas', \n            'pokemon the first movie', 'the polar express', 'dumb and dumber', \n            'ace venture pet detective', 'horrible bosses', 'the hangover', 'bridesmaids',\n            'bruce almighty', 'austin powers', 'dirty dancing', 'marley and me', \n            'the blair witch project', 'i am legend', 'world war z',  \n            'straight out of compton', 'who framed roger rabbit', 'blades of glory',\n            'kicking and screaming', 'blade runner', 'the great gatsby', 'the revenant',\n            'the notebook', 'the never ending story', 'the outsiders', 'the shining',\n            'stand by me'\n        ]\n    },\n    games: {\n        veryHard: [\n            'gta', 'halo', 'dota', 'fifa', 'doom'\n        ],\n        hard: [ \n            'witcher', 'pokemon', 'yugioh', 'tetris', 'destiny', 'skyrim', 'fallout', \n            'diablo', 'madden',  'frogger', 'metroid', 'tekken', 'contra', 'persona',\n            'fornite', 'pacman', 'portal'\n        ],\n        medium: [\n            'spiderman', 'last of us', 'the sims', 'mario kart', 'star fox', 'sly cooper',\n            'starcraft', 'minecraft', 'wii sports', 'undertale', 'mega man', 'goldeneye',\n            'donky kong', 'rock band', 'uncharted', 'overwatch', 'dark souls', \n            'bloodborne', 'god of war', 'bioshock', 'half life'\n        ],\n        easy: [\n            'call of duty', 'final fantasy', 'kingdom hearts', 'super smash brothers',\n            'mario party', 'super mario world', 'crash bandicoot', 'banjo kazooie',\n            'luigis mansion', 'mass effect', 'rainbow six', 'counter strike',\n            'league of legends', 'world of warcraft', 'civilization', \n            'red dead redemption', 'sonic the hedgehog', 'borderlands', 'metal gear solid',\n            'assassins creed', 'castlevania', 'soul caliber', 'mortal kombat',\n            'tony hawks pro skater', 'resident evil', 'apex legends', 'battlefield',\n            'silent hill', 'batman arkham asylum', 'shadow of the colossus', \n            'the legend of zelda', 'chrono trigger', 'street fighter'\n        ]\n    },\n    books: {\n        veryHard: [\n            'it', 'dune', 'bfg'\n        ],\n        hard: [\n            'carrie', 'macbeth', 'hamlet', 'othello', 'eragon', 'i robot', 'dracula', \n            'witcher'\n        ],\n        medium: [\n            'moby dick', 'the giver', 'nancy drew', 'twilight', 'jane eyre', 'animorphs',\n            'the raven', 'warriors'\n        ],\n        easy: [\n            'hunger games', 'to kill a mocking bird', 'the adventures of tom sawyer',\n            'romeo and juliet', 'gone with the wind', 'the da vinci code', \n            'a tale of two cities', 'harry potter', 'the very hungry caterpillar',\n            'fifty shades of grey', 'the handmaids tale', 'and then there were none',\n            'lord of the flies', 'the great gatsby', 'the fault in our stars', \n            'animal farm', 'pride and prejudice', 'where the wild things are',\n            'the power of positive thinking', 'the outsiders', 'the grapes of wrath', \n            'the hitchikers guide to the galaxy', 'a wrinkle in time', \n            'the cat in the hat', 'diary of a wimpy kid', 'the chronicles of narnia',\n            'a song of ice and fire', 'captain underpants', \n            'a series of unfortunate events', 'the dark tower', 'the shining', \n            'the catcher in the rye', 'of mice and men', \n            'the adventures of huckleberry finn', 'the odyssey', 'julius caeser', \n            'crime and punishment', 'frankenstein', 'enders game', 'gullivers travels', \n            'les miserables', 'the metamorphosis', 'where the crawdads sing', \n            'green eggs and ham', 'becoming michelle obama', \n            'war against all puerto ricans', 'left to tell', 'rocket boys', \n            'everything on it', 'down these mean streets', \n            'percy jackson and the olympians', 'a shadow of what was lost', \n            'the haunting of hill house', 'treasure island', 'the art of war', \n            'don quixote', 'the old man and the sea', 'for whom the bell tolls', \n            \"charlotte's web\", 'a christmas carol', 'necronomicon', 'pet sematary', \n            'ready player one', 'the martian'\n        ]\n    },\n    tvShows: {\n        veryHard: [\n            'mash', 'lost', 'er'\n        ],\n        hard: [\n            'friends', 'mad men', 'cheers', 'frasier', 'dexter', 'icarly', 'pokemon', \n            'digimon', 'yugioh', 'naruto', 'bleach', 'atlanta', 'archer', 'frasier'\n        ],\n        medium: [\n            'the wire', 'family guy', 'seinfeld', 'the office', 'south park', \n            'portlandia', 'twin peaks', 'daredevil', 'luke cage', 'the middle', \n            'doctor who', 'spongebob', 'victorious', 'one piece', 'scooby doo', \n            'homeland', 'hannibal', 'survivor', 'all that', 'star trek', 'futurama'\n        ],\n        easy: [\n            'game of thrones', 'breaking bad', 'the sopranos', 'the simpsons', \n            'parks and recreation', 'arrested development', 'saturday night live',\n            'the walking dead', 'the big bang theory', 'curb your enthusiam', \n            'the x files', 'i love lucy', 'buffy the vampire slayer', 'the twilight zone',\n            'black mirror', 'stranger things', 'on my block', 'modern family', \n            'orange is the new black', 'freaks and geeks', 'bojack horseman', \n            'sex and the city', 'ren and stimpy', 'beavis and butthead', 'robot chicken',\n            'dragon ball z', 'the fresh prince of bel air', 'malcolm in the middle',\n            'law and order', 'chappelles show', 'downtown abbey', 'american horror story',\n            'the jetsons', 'the flinstones', 'house of cards', 'key and peele', \n            'the golden girls', 'prison break', 'true detective', \n            'avatar the last airbender', 'boardwalk empire', 'rick and morty', \n            'greys anatomy', 'the andy griffith show', 'the honeymooners', \n            'the muppet show', 'cowboy bebop', 'in living color', \n            'mister rogers neighborhood', 'blues clues', 'teletubbies', \n            'dora the explorer', 'band of brothers', 'sesame street', \n            'everybody loves raymond', 'everybody hates chris', 'home improvement'\n        ]\n    },\n    musicArtists: {\n        veryHard: [    \n            'kyle', 'jay z','pink', 'rush', 'joji', 'nwa', 'jid', 'neyo'\n        ],\n        hard: [\n            'eminem', 'madonna', 'drake', 'prince', 'beyonce', 'rihanna', 'tupac', \n            'adele', 'nirvana', 'j cole', 'nsync', 'kehlani', 'logic', 't pain', 'amine',\n            'miguel', 'big pun', 'ciara', 'khalid', 'nelly', 'queen', 'usher', 'weezer'\n        ],\n        medium: [\n            'lady gaga', 'elton john', 'lil wayne', 'billy joel', 'ed sheeran', \n            'kanye west', 'katy perry', 'bruno mars', 'bad bunny', 'nial horan', \n            'zayn malik', 'liam payne', 'skrillex', 'dua lipa', 'rich brian', \n            'asap rocky', 'asap ferg', 'the doors', 'green day', 'marshmello', \n            'mac miller', 'paramore', 'radiohead', 'young thug'\n        ],\n        easy: [\n            'guns n roses', 'michael jackson', 'ßelvis presley', 'bruce springsteen',\n            'taylow swift', 'selena gomez', 'mariah carey', 'whitney houston',\n            'stevie wonder', 'david bowie', 'britney spears', 'paul mccartney', \n            'the beatles', 'celine dion', 'justin bieber', 'biggie smalls', \n            'frank sinatra', 'jimi hendrix', 'foo fighters', 'my chemical romance',\n            'john lennon', 'james brown', 'ozzy osbourne', 'carlos santana', \n            'fall out boy', 'brockhampton', 'xxxtentacion', 'anderson paak',\n            'justin timberlake', 'boys n the hood', 'boyz ii men', 'one direction',\n            'harry styles', 'louis tomlinson', 'a boogie wit da hoodie', \n            'red hot chili peppers', 'system of a down', 'jennifer lopez', 'nicki minaj',\n            'schoolboy q', 'kendrick lamar', 'tyler the creator', 'frank ocean', \n            'all time low', 'the all american rejects', 'talib kweli', 'backstreet boys',\n            'joey badass', 'bill withers', 'billie eilish', 'chance the rapper', \n            'childish gambino', 'missy elliot', 'earth wind and fire', 'jaden smith', \n            'jonas brothers', 'wiz khalifa', 'linkin park', 'marc anthony', \n            'pharell williams', 'panic at the disco', 'playboi carti', 'post malone',\n            'shawn mendes', 'travis scott'\n        ]\n    },\n    misc: {\n        veryHard: [\n            \"able\", \"acid\", \"arch\", \"army\", \"baby\", \"back\", \"ball\", \"band\", \"base\", \n            \"bath\", \"bell\", \"bent\", \"bird\", \"bite\", \"blow\", \"blue\", \"boat\", \"body\", \n            \"bone\", \"book\", \"boot\", \"bulb\", \"burn\", \"cake\", \"card\", \"care\", \"cart\", \n            \"chin\", \"coal\", \"coat\", \"cold\", \"comb\", \"come\", \"copy\", \"cord\", \"cork\", \n            \"dark\", \"dead\", \"dear\", \"debt\", \"deep\", \"door\", \"down\", \"drop\", \"dust\", \n            \"east\", \"edge\", \"even\", \"ever\", \"face\", \"fact\", \"fall\", \"farm\", \"fear\", \n            \"fire\", \"fish\", \"flag\", \"flat\", \"fold\", \"food\", \"foot\", \"fork\", \"form\", \n            \"fowl\", \"free\", \"from\", \"full\", \"girl\", \"give\", \"goat\", \"gold\", \"good\", \n            \"grey\", \"grip\", \"hair\", \"hand\", \"hard\", \"hate\", \"have\", \"head\", \"hear\",\n            'heat', 'help', 'high', 'hole', 'hook', 'hope', 'horn', 'hour', 'idea', \n            'iron', 'join', 'jump', 'keep', 'kick', 'kind', 'kiss', 'knee', 'knot', \n            'land', 'last', 'late', 'lead', 'leaf', 'left', 'lift', 'like', 'line', \n            'list', 'lock', 'long', 'look', 'loss', 'loud', 'love', 'make', 'male', \n            'mark', 'mass', 'meal', 'meat', 'milk', 'mind', 'mine', 'mist', 'moon', \n            'move', 'much', 'nail', 'name', 'near', 'neck', 'need', 'news', 'nose', \n            'note', 'only', 'open', 'oven', 'over', 'page', 'pain', 'part', 'past', \n            'pipe', 'play', 'poor', 'pull', 'pump', 'push', 'rail', 'rain', 'rate', \n            'rest', 'rice', 'ring', 'road', 'roll', 'roof', 'room', 'root', 'rule', \n            'safe', 'sail', 'salt', 'same', 'sand', 'seat', 'seed', 'seem', 'self', \n            'send', 'ship', 'shoe', 'shut', 'side', 'sign', 'silk', 'size', 'skin', \n            'slip', 'slow', 'snow', 'soap', 'sock', 'soft', 'some', 'song', 'sort', \n            'soup', 'star', 'stem', 'step', 'stop', 'such', 'swim', 'tail', 'take', \n            'talk', 'tall', 'test', 'than', 'that', 'then', 'thin', 'this', 'till', \n            'time', 'town', 'tray', 'tree', 'true', 'turn', 'unit', 'very', 'view', \n            'walk', 'wall', 'warm', 'wash', 'wave', 'week', 'well', 'west', 'when', \n            'whip', 'wide', 'will', 'wind', 'wine', 'wing', 'wire', 'wise', 'with', \n            'wood', 'wool', 'word', 'work', 'worm', 'year'\n        ],\n        hard: [\n            \"about\", \"account\", \"across\", \"after\", \"again\", \"against\", \"almost\", \"among\", \n            \"amount\", \"angle\", \"angry\", \"animal\", \"answer\", \"apple\", 'attack', 'attempt', \n            'awake', 'balance', 'basin', 'basket', 'because', 'before', 'belief', 'berry', \n            'between', 'birth', 'bitter', 'black', 'blade', 'blood', 'board', 'boiling', \n            'bottle', 'brain', 'brake', 'branch', 'brass', 'bread', 'breath', 'brick', \n            'bridge', 'bright', 'broken', 'brother', 'brown', 'brush', 'bucket', 'burst', \n            'butter', 'button', 'camera', 'canvas', 'cause', 'certain', 'chain', 'chalk', \n            'chance', 'change', 'cheap', 'cheese', 'chest', 'chief', 'church', 'circle', \n            'clean', 'clear', 'clock', 'cloth', 'cloud', 'collar', 'colour', 'comfort', \n            'common', 'company', 'complex', 'control', 'copper', 'cotton', 'cough', \n            'country', 'cover', 'crack', 'credit', 'crime', 'cruel', 'crush', 'current', \n            'curtain', 'curve', 'cushion', 'damage', 'danger', 'death', 'degree', 'design', \n            'desire', 'detail', 'dirty', 'disease', 'disgust', 'doubt', 'drain', 'drawer', \n            'dress', 'drink', 'driving', 'early', 'earth', 'effect', 'elastic', 'engine', \n            'enough', 'equal', 'error', 'event', 'every', 'example', 'expert', 'false', \n            'family', 'father', 'feather', 'feeble', 'feeling', 'female', 'fertile', \n            'fiction', 'field', 'fight', 'finger', 'first', 'fixed', 'flame', 'flight', \n            'floor', 'flower', 'foolish', 'force', 'forward', 'frame', 'friend', 'front', \n            'fruit', 'future', 'garden', 'general', 'glass', 'glove', 'grain', 'grass', \n            'great', 'green', 'group', 'growth', 'guide', 'hammer', 'hanging', 'happy', \n            'harbour', 'harmony', 'healthy', 'hearing', 'heart', 'history', 'hollow', \n            'horse', 'house', 'humour', 'impulse', 'insect', 'island', 'jelly', 'jewel', \n            'journey', 'judge', 'kettle', 'knife', 'laugh', 'leather', 'letter', 'level', \n            'library', 'light', 'limit', 'linen', 'liquid', 'little', 'living', 'loose', \n            'machine', 'manager', 'market', 'married', 'match', 'measure', 'medical', \n            'meeting', 'memory', 'metal', 'middle', 'minute', 'mixed', 'money', 'monkey', \n            'month', 'morning', 'mother', 'motion', 'mouth', 'muscle', 'music', 'narrow', \n            'nation', 'natural', 'needle', 'nerve', 'night', 'noise', 'normal', 'north', \n            'number', 'offer', 'office', 'opinion', 'orange', 'order', 'other', 'owner', \n            'paint', 'paper', 'parcel', 'paste', 'payment', 'peace', 'pencil', 'person', \n            'picture', 'place', 'plane', 'plant', 'plate', 'please', 'plough', 'pocket', \n            'point', 'poison', 'polish', 'porter', 'potato', 'powder', 'power', 'present', \n            'price', 'print', 'prison', 'private', 'process', 'produce', 'profit', 'prose', \n            'protest', 'public', 'purpose', 'quality', 'quick', 'quiet', 'quite', 'range', \n            'reading', 'ready', 'reason', 'receipt', 'record', 'regret', 'regular', \n            'request', 'respect', 'reward', 'rhythm', 'right', 'river', 'rough', \n            'round', 'scale', 'school', 'science', 'screw', 'second', 'secret', 'sense', \n            'serious', 'servant', 'shade', 'shake', 'shame', 'sharp', 'sheep', 'shelf', \n            'shirt', 'shock', 'short', 'silver', 'simple', 'sister', 'skirt', 'sleep',\n            'slope', 'small', 'smash', 'smell', 'smile', 'smoke', 'smooth', 'snake',\n            'sneeze', 'society', 'solid', 'sound', 'south', 'space', 'spade', 'special', \n            'sponge', 'spoon', 'spring', 'square', 'stage', 'stamp', 'start', 'station', \n            'steam', 'steel', 'stick', 'sticky', 'stiff', 'still', 'stitch', 'stomach', \n            'stone', 'store', 'story', 'strange', 'street', 'stretch', 'strong', 'sudden', \n            'sugar', 'summer', 'support', 'sweet', 'system', 'table', 'taste', 'theory', \n            'there', 'thick', 'thing', 'thought', 'thread', 'throat', 'through', \n            'through', 'thumb', 'thunder', 'ticket', 'tight', 'tired', 'tongue', 'tooth', \n            'touch', 'trade', 'train', 'trick', 'trouble', 'twist', 'under', 'value', \n            'verse', 'vessel', 'violent', 'voice', 'waiting', 'waste', 'watch', 'water', \n            'weather', 'weight', 'wheel', 'where', 'while', 'whistle', 'white', 'window', \n            'winter', 'woman', 'wound', 'writing', 'wrong', 'yellow', 'young'\n        ],\n        medium: [\n            \"addition\", \"adjustment\", \"agreement\", \"amusement\", \"apparatus\", \"approval\", \n            'argument', 'attention', 'attraction', 'authority', 'automatic', 'beautiful', \n            'behaviour', 'building', 'business', 'carriage', 'chemical', 'committee', \n            'comparison', 'complete', 'condition', 'connection', 'conscious', 'daughter', \n            'decision', 'delicate', 'dependent', 'different', 'digestion', 'direction', \n            'discovery', 'discussion', 'distance', 'division', 'education', 'electric', \n            'exchange',  'existence', 'expansion', 'experience', 'frequent', 'government', \n            'hospital', 'important', 'increase', 'industry', 'instrument', 'insurance', \n            'interest', 'invention', 'knowledge', 'language', 'learning', 'material', \n            'military', 'mountain', 'necessary', 'operation', 'opposite', 'ornament', \n            'parallel', 'physical', 'pleasure', 'political', 'position', 'possible', \n            'probable', 'property', 'punishment', 'question', 'reaction', 'relation', \n            'religion', 'scissors', 'secretary', 'selection', 'separate', 'statement', \n            'stocking', 'straight', 'structure', 'substance', 'suggestion', 'surprise', \n            'teaching', 'tendency', 'together', 'tomorrow', 'transport', 'trousers', \n            'umbrella', 'yesterday'\n        ],\n        easy: [\n            \"advertisement\", 'competition', 'destruction', 'development', \n            'distribution', 'observation', 'organization', 'representative', 'responsible'\n        ]\n    }\n}","const moves = {\n    a: \"a\",\n    b: \"b\",\n    c: \"c\",\n    d: \"d\",\n    e: \"e\",\n    f: \"f\",\n    g: \"g\",\n    h: \"h\",\n    i: \"i\",\n    j: \"j\",\n    k: \"k\",\n    l: \"l\",\n    m: \"m\",\n    n: \"n\",\n    o: \"o\",\n    p: \"p\",\n    q: \"q\",\n    r: \"r\",\n    s: \"s\", \n    t: \"t\",\n    u: \"u\",\n    v: \"v\",\n    w: \"w\",\n    x: \"x\",\n    y: \"y\",\n    z: \"z\"\n}\n\nexport default moves;","import React, { useState } from 'react';\nimport moves from '../util/moves';\n\nconst GuessForm = ({ handleGuess, guessesObj }) => {\n    const [ guess, setGuess ] = useState(\"\");\n    const [ error, setError ] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(guessesObj[guess.toLowerCase()]) {\n            setError(\"You already guessed that letter!\");\n            return;\n        } \n        \n        if(moves[guess.toLowerCase()]) {\n            handleGuess(guess.toLowerCase());\n            setError(\"\");\n            setGuess(\"\");\n        } else {\n            setError(\"Invalid guess\");\n        }\n    }\n    \n    const handleChange = (e) => {\n        setGuess(e.target.value);\n    }\n    \n    return (\n        <>\n            { error ? <p className=\"error\">{error}</p> : null }\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" maxLength={1} value={guess} onChange={handleChange}/>\n                <input type=\"submit\" value=\"Guess\"/>\n            </form>\n        </>\n    )\n}\n\nexport default GuessForm;","import hangman_0 from '../assets/hangman_0.svg';\nimport hangman_1 from '../assets/hangman_1.svg';\nimport hangman_2 from '../assets/hangman_2.svg';\nimport hangman_3 from '../assets/hangman_3.svg';\nimport hangman_4 from '../assets/hangman_4.svg';\nimport hangman_5 from '../assets/hangman_5.svg';\nimport hangman_6 from '../assets/hangman_6.svg';\n\nconst visualHangman = {\n    6: hangman_0,\n    5: hangman_1,\n    4: hangman_2,\n    3: hangman_3,\n    2: hangman_4,\n    1: hangman_5,\n    0: hangman_6\n}\n\nexport default visualHangman;","import React, { useState, useEffect } from 'react';\nimport GuessForm from './GuessForm';\nimport '../css/Game.css';\nimport visualHangman from '../util/visualHangman';\n\nconst Game = ({ gameOver, isGameOver, answer, returnToSetup, category, difficulty }) => {\n    const [ displayWord, setDisplayWord ] = useState([]);\n    const [ guessesRemaining, setGuessesRemaining ] = useState(6);\n    const [ guesses, setGuesses ] = useState([]);\n    const [ guessesObj, setGuessesObj ] = useState({});\n    const [ guessesStyle, setGuessesStyle ] = useState({});\n\n    const getDisplayWord = () => {\n        let underscores = [];\n        for(let char of answer) {\n          if(char === \" \") {\n            underscores.push(\" \");\n          } else {\n            underscores.push(\"_\");\n          }\n        }\n        setDisplayWord(underscores);\n    }\n\n    useEffect(() => {\n        getDisplayWord();\n    }, [])\n  \n    useEffect(() => {\n      isGameOver(displayWord, answer, guessesRemaining);\n      if(guessesRemaining > 4) {\n        setGuessesStyle({ \"color\": 'green' })\n      } else if (guessesRemaining > 2) {\n        setGuessesStyle({ \"color\": 'yellow' })\n      } else {\n        setGuessesStyle({ \"color\": 'red' })\n      }\n    }, [displayWord, guessesRemaining])\n  \n    const handleGuess = ( guess ) => {\n      let guessFound = false;\n      let newDisplayWord = [...displayWord];\n      for(let i = 0; i < answer.length; i ++) {\n        if(answer[i] === guess.toLowerCase()) {\n          newDisplayWord[i] = guess.toLowerCase();\n          setDisplayWord(newDisplayWord);\n          guessFound = true;\n        }\n      }\n\n      let newGuessesObj = {...guessesObj};\n      newGuessesObj[guess.toLowerCase()] = 1;\n      setGuessesObj(newGuessesObj);\n\n      let newGuesses =[...guesses, guess.toLowerCase()];\n      setGuesses(newGuesses);\n  \n      if(!guessFound) {\n        setGuessesRemaining(guessesRemaining - 1);\n      }\n    }\n\n    const handleReplay = () => {\n      setGuessesRemaining(6);\n      setGuesses([]);\n      setGuessesObj({});\n      setDisplayWord([]);\n    }\n  \n    useEffect(() => {\n      if(!displayWord.length && gameOver) {\n        returnToSetup();\n      }\n    }, [displayWord])\n\n    const getCategoryDisplay = () => {\n      if(category === \"games\") return \"Video Games\"\n      else if(category === \"tvShows\") return \"TV Shows\"\n      else if(category === \"musicArtists\") return \"Music Artists\"\n      else if(category === \"misc\") return \"Miscellaneous\"\n      else return category.slice(0, 1).toUpperCase() + category.slice(1);\n    }\n\n    const getDifficultyDisplay = () => {\n      if(difficulty === \"veryHard\") return \"Very Hard\"\n      else return difficulty.slice(0, 1).toUpperCase() + difficulty.slice(1);\n    }\n\n    const getHangmanDisplay = () => {\n      return visualHangman[guessesRemaining];\n    }\n\n    const categoryDisplay = getCategoryDisplay();\n    const difficultyDisplay = getDifficultyDisplay();\n    const hangmanDisplay = getHangmanDisplay();\n    \n    return (\n        <div className=\"game\">\n          <img src={hangmanDisplay} alt={`${guessesRemaining} board`} className=\"hangmanDisplay\" />\n          { gameOver ? (!guessesRemaining ? <p className=\"gameLose\">Out of Moves!</p> : <p className=\"gameWin\">You win!</p>) : null }\n          <p className=\"category\"><span>Category: </span>{categoryDisplay}</p>\n          <p className=\"difficulty\"><span>Difficulty: </span>{difficultyDisplay}</p>\n          <p className=\"guessesRemaining\"><span>Guesses Remaining:</span> <span style={guessesStyle}>{guessesRemaining}</span></p>\n          <p className=\"guesses\"><span>Guesses:</span> {guesses.join(\", \")}</p>\n          <div className=\"board\">\n            { !gameOver ? displayWord.map(( letter, i ) => {\n              return (\n                <p className=\"wordCharacter\" key={i}>\n                  {letter}\n                </p>\n              )\n            }) : <p className=\"answer\"><span>Answer: </span>{answer}</p> }\n          </div>\n\n          { !gameOver ? <GuessForm handleGuess={handleGuess} guessesObj={guessesObj} /> : <button onClick={handleReplay}>Replay</button> }\n          \n        </div>\n    )\n}\n\nexport default Game;","import React, { useState } from 'react';\nimport '../css/GameSetup.css';\n\nconst GameSetup = ({ handleSetup }) => {\n    const [ category, setCategory ] = useState(\"choose\");\n    const [ difficulty, setDifficulty ] = useState(\"choose\");\n    const [ error, setError ] = useState(\"\");\n\n    const handleChange = (e) => {\n        if(e.target.className === \"categorySelect\") {\n            setCategory(e.target.value)\n        } else {\n            setDifficulty(e.target.value);\n        }\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(category !== \"choose\" && difficulty !== \"choose\") {\n            setError(\"\");\n            handleSetup({ category, difficulty });\n        } else {\n            setError(\"Please select both a 'Category' and 'Difficulty'\");\n        }\n    }\n    \n    return (\n        <form className=\"gameSetup\" onSubmit={handleSubmit}>\n            { error ? <p className=\"error\">{error}</p> : null }\n            <label htmlFor=\"categorySelect\">Select a category: </label>\n            <select onChange={handleChange} className=\"categorySelect\" required defaultValue=\"choose\">\n                <option value=\"choose\" disabled>Choose a Category</option>\n                <option value=\"movies\">Movies</option>\n                <option value=\"games\">Video Games</option>\n                <option value=\"books\">Books</option>\n                <option value=\"tvShows\">TV Shows</option>\n                <option value=\"musicArtists\">Music Artists</option>\n                <option value=\"misc\">Misc</option>\n            </select>\n\n            <label htmlFor=\"difficultySelect\">Select a difficulty: </label>\n            <select onChange={handleChange} className=\"difficultySelect\" required defaultValue=\"choose\">\n                <option value=\"choose\" disabled>Choose a Difficulty</option>\n                <option value=\"veryHard\">Very Hard</option>\n                <option value=\"hard\">Hard</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"easy\">Easy</option>\n            </select>\n\n            <input type=\"submit\" value=\"Start Game\" />\n        </form>\n    )\n}\n\nexport default GameSetup","import React, { useState } from 'react';\nimport dictionary from './util/dictionary';\nimport './App.css';\nimport Game from './components/Game';\nimport GameSetup from './components/GameSetup';\n\nconst App = () => {\n  const [ answer, setAnswer ] = useState(\"\");\n  const [ gameOver, setGameOver ] = useState(false);\n  const [ gameOptions, setGameOptions ] = useState({});\n  const [ wins, setWins ] = useState(0);\n  const [ losses, setLosses ] = useState(0);\n\n  const getNewWord = ( options = { category: \"misc\", difficulty: \"easy\" } ) => {\n    const { category, difficulty } = options;\n    setGameOptions({category, difficulty})\n    const dictionaryCategory = dictionary[category];\n    const validDictionaryTerms = dictionaryCategory[difficulty];\n    const randomIndex = Math.floor(Math.random() * validDictionaryTerms.length);\n\n    let newWord = validDictionaryTerms[randomIndex];\n    setAnswer(newWord);\n  }\n\n  const isGameOver = ( displayWord, answer, guessesRemaining ) => {\n    if(displayWord.join(\"\") === answer || !guessesRemaining) {\n      if(displayWord.join(\"\") === answer) setWins(wins + 1);\n      if(!guessesRemaining) setLosses(losses + 1);\n      setGameOver(true);\n    } else {\n      setGameOver(false);\n    }\n  }\n\n  const returnToSetup = () => {\n    setGameOver(false);\n    setAnswer(\"\");\n  }\n\n  console.log(answer);\n\n  const gameProps = {\n    gameOver,\n    isGameOver,\n    answer,\n    returnToSetup,\n    ...gameOptions\n  }\n  \n  return (\n      <div className=\"App\">\n        <div className=\"stats\">\n            <label className=\"wins\">Wins: </label><p>{wins}</p>\n            <label className=\"losses\">Losses: </label><p>{losses}</p>\n        </div>\n        { answer ? \n          <Game {...gameProps} /> :\n          <GameSetup handleSetup={getNewWord} />\n        }\n      </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}